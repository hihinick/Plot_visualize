# -*- coding: utf-8 -*-
"""plot

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18drPG1NPE_wydJkQzcFxKY5baq__tnVx
"""
'''
#預設參數 : plotly_plot(data,choose=False,From=None,To=None,sort=False,By=None,x_name=None,y_name=None,Save=False,fig_name='test'):
    df : 放資料集名稱
  choose : 是否篩選資料index(True or False)
    From : choose=True時，放篩選資料起點(int)
      To : choose=True時，放篩選資料終點(int)
    sort : 放排序欄位(True or False)
      By : sort=True時，放排序欄位(str)
  x_name : 放x軸名稱(str)
  y_name : 放y軸名稱(str)
    Save : 是否存檔(True or False)
fig_name : 放圖片檔案名稱(str)
'''
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import plotly.graph_objects as go
import os
class mat_plot():
    def  __init__(self,df,choose=False,From=None,To=None,sort=False,By=None,x_name=None,y_name=None,title=None,Save=False,fig_name='test1',fig_length=20,fig_width=4):
        self.df = df
        self.choose = choose
        self.From = From
        self.To = To
        self.sort = sort
        self.By = By
        self.x_name = x_name
        self.y_name = y_name
        self.title = title
        self.Save = Save
        self.fig_name = fig_name
        self.fig_length = fig_length
        self.fig_width = fig_width
    def plotly_plot(self):
        if self.choose:
            if self.sort:
                data1 = self.df[self.From:self.To]
                data = data1.sort_values(by=self.By)
            else:
                data1 = self.df[self.From:self.To]
                data = data1.copy()
        else:
            if self.sort:
                data = self.df.sort_values(by=self.By)
            else:
                data = self.df.copy()
        x_axis = np.arange(len(data))
        fig = []
        for a in range(len(data.columns)):
            value=[]
            for b in  range(len(data)):
                value.append(data.iloc[b,a])
            trace=go.Scatter(name=(data.columns[a]),x=x_axis,y=value)
            fig.append(trace)
        layout = go.Layout(xaxis={'title':self.x_name,'titlefont':{'size':20}},yaxis={'title':self.y_name,'titlefont':{'size':20}},title=self.title)
        fig = go.Figure(data=fig, layout=layout)  
        fig.show()
        if not os.path.exists("images"):
            os.mkdir("images")
        if self.Save:
            if not os.path.exists("images"):
                os.mkdir("images")
            fig.write_image("images/{}.png".format(self.fig_name))
    def plt_plot(self):
        if self.choose:
            if self.sort:
                data1 = self.df[self.From:self.To]
                data = data1.sort_values(by=self.By)
            else:
                data1 = self.df[self.From:self.To]
                data = data1.copy()
        else:
            if self.sort:
                data = self.df.sort_values(by=self.By)
            else:
                data = self.df.copy()
        plt.figure(figsize=(self.fig_length,self.fig_width))
        x = np.arange(len(data))
        for i in data.columns:
            plt.plot(x, data[i], label=i)
            plt.legend()
        plt.xlabel(self.x_name, fontproperties="Microsoft JhengHei", fontsize=self.fig_width*5)
        plt.ylabel(self.y_name, fontproperties="Microsoft JhengHei", fontsize=self.fig_width*5)
        plt.title(self.title)
        if not os.path.exists("images"):
            os.mkdir("images")
        if self.Save:
            plt.savefig('images/{}.png'.format(self.fig_name))